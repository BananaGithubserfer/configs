# Default config for sway

#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod1
exec bash /cmus
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
set $menu dmenu_path | wofy --show drun -I | xargs swaymsg exec --
# Your preferred terminal emulator
set $term gnome-terminal
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --
# exec synclient VertScroll=-79 synclient HorizScroll=-79

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /Free-download-Graphic-Design-Background-Wallpaper-for-.jpg fill
#
# Example configuration:
#
    output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
### Input configuration
#
# Example configuration:
#
input * {
    xkb_layout us,ru
    xkb_options grp:alt_shift_toggle
}
input "2:14:SynPS/2_Synaptics_TouchPad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}
bindsym --to-code XF86AudioRaiseVolume exec --no-startup-id "amixer set Master 5%+ && volnoti-show $(amixer get Master | grep -Po '[0-9]+(?=%)' | head -1)"
bindsym --to-code XF86AudioLowerVolume exec --no-startup-id "amixer set Master 5%- && volnoti-show $(amixer get Master | grep -Po '[0-9]+(?=%)' | head -1)"

#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
	bindsym --to-code ctrl+c+left exec cmus-remote -n
	bindsym --to-code ctrl+c+right exec cmus-remote -r
	bindsym --to-code ctrl+c+p exec cmus-remote -u

    # Start a terminal
    bindsym --to-code ctrl+Alt+y exec chromium   
    bindsym --to-code ctrl+Alt+t exec gnome-terminal
    bindsym --to-code ctrl+Alt+g exec gedit
    bindsym --to-code ctrl+Alt+m exec $menu
    bindsym --to-code ctrl+Alt+n exec nautilus
    bindsym --to-code ctrl+Alt+l exec libreoffice
    
    # Kill focused window
    bindsym --to-code ctrl+Escape kill
	
    # Start your launcher
    bindsym --to-code ctrl+d exec dmenu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal
    # Reload the configuration file
    bindsym ctrl+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym ctrl+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym ctrl+left focus left
    bindsym ctrl+down focus down
    bindsym ctrl+up focus up
    bindsym ctrl+right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
#    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym ctrl+Shift+Left move left
    bindsym ctrl+Shift+Down move down
    bindsym ctrl+Shift+Up move up
    bindsym ctrl+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym ctrl+1 workspace number 1
    bindsym ctrl+2 workspace number 2
    bindsym ctrl+3 workspace number 3
    bindsym ctrl+4 workspace number 4
    bindsym ctrl+5 workspace number 5
    bindsym ctrl+6 workspace number 6
    bindsym ctrl+7 workspace number 7
    bindsym ctrl+8 workspace number 8
    bindsym ctrl+9 workspace number 9
    bindsym ctrl+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*
